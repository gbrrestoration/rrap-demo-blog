{
  
    
        "post0": {
            "title": "Provenance Query MVP Demo Notebook",
            "content": "About . This notebook is a demonstration of some of capabilities of RRAP Provenance with notebooks. . With RRAP-IS Provenance you can query the database to determine all &#39;Activities&#39;, &#39;Entities&#39; and &#39;Actors&#39; associated with particular &#39;Outputs&#39;, &#39;Inputs&#39;, or &#39;Reef Interventions&#39; . Please read documenation on Provenance to understand terms used in this notebook and the future systems . https://github.com/gbrrestoration/rrap-is-proto/blob/main/utilities/packages/python/keycloak-utils/KeycloakRestUtilities/TokenManager.py . https://github.com/gbrrestoration/rrap-is-proto/blob/main/admin-tooling/data-store/import_db.py Construct Json directly . APIs: https://data-api.testing.rrap-is.com/docs https://registry-api.testing.rrap-is.com/docs https://prov-api.testing.rrap-is.com/docs . Auth: &#39;Authorization&#39; : &#39;Bearer &#39; https://data-api.testing.rrap-is.com/check-access/check-general-access https://data-api.testing.rrap-is.com/&lt;/p&gt; token: https://data.testing.rrap-is.com/ . Maintain session https://github.com/gbrrestoration/rrap-is-proto/blob/main/utilities/packages/python/keycloak-utils/KeycloakRestUtilities/TokenManager.py . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; import requests x=requests.get(&quot;https://data-api.testing.rrap-is.com/check-access/check-general-access&quot;) display(x.status_code) x=requests.get(&quot;https://data-api.testing.rrap-is.com/&quot;) display(x.status_code) myToken = &#39;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzMVBQVkZZdE53a2JEcVZnNjFqX08xNXdiN2FRZU1BaExCbWdpY2VvY2dBIn0.eyJleHAiOjE2NTgyODY3OTgsImlhdCI6MTY1ODI3OTU5OCwiYXV0aF90aW1lIjoxNjU4Mjc5NTk2LCJqdGkiOiI2YjI2YmVjOC1iYWRiLTQyMjgtYmFjNi1lYmYxMjYxZDk0NmYiLCJpc3MiOiJodHRwczovL2F1dGguZGV2LnJyYXAtaXMuY29tL2F1dGgvcmVhbG1zL3JyYXAiLCJhdWQiOlsicmVhbG0tbWFuYWdlbWVudCIsImFjY291bnQiXSwic3ViIjoiZWFiZDg2YjAtNWM1NC00NzNiLWI1MWUtMzZiZTMxMzdkNGRiIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZGF0YS1zdG9yZS11aSIsIm5vbmNlIjoiOTZmMjcyMzYtN2M3OC00NTlmLThhNGQtZmRjMmJhZGVlN2QwIiwic2Vzc2lvbl9zdGF0ZSI6ImU4YmQxYmZjLTliMGQtNDFkMy1hNDIxLWFiZWFhNGIzYzI5MiIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1ycmFwIiwiZGF0YS1zdG9yZS13cml0ZSIsIm9mZmxpbmVfYWNjZXNzIiwiaGFuZGxlLXdyaXRlIiwiZGF0YS1zdG9yZS1hZG1pbiIsImRhdGEtc3RvcmUtcmVhZCIsImhhbmRsZS1yZWFkIiwidW1hX2F1dGhvcml6YXRpb24iLCJoYW5kbGUtYWRtaW4iXX0sInJlc291cmNlX2FjY2VzcyI6eyJyZWFsbS1tYW5hZ2VtZW50Ijp7InJvbGVzIjpbInZpZXctcmVhbG0iLCJ2aWV3LWlkZW50aXR5LXByb3ZpZGVycyIsIm1hbmFnZS1pZGVudGl0eS1wcm92aWRlcnMiLCJpbXBlcnNvbmF0aW9uIiwicmVhbG0tYWRtaW4iLCJjcmVhdGUtY2xpZW50IiwibWFuYWdlLXVzZXJzIiwicXVlcnktcmVhbG1zIiwidmlldy1hdXRob3JpemF0aW9uIiwicXVlcnktY2xpZW50cyIsInF1ZXJ5LXVzZXJzIiwibWFuYWdlLWV2ZW50cyIsIm1hbmFnZS1yZWFsbSIsInZpZXctZXZlbnRzIiwidmlldy11c2VycyIsInZpZXctY2xpZW50cyIsIm1hbmFnZS1hdXRob3JpemF0aW9uIiwibWFuYWdlLWNsaWVudHMiLCJxdWVyeS1ncm91cHMiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsImRlbGV0ZS1hY2NvdW50Iiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJvcGVuaWQgZW1haWwgcHJvZmlsZSByb2xlcyIsInNpZCI6ImU4YmQxYmZjLTliMGQtNDFkMy1hNDIxLWFiZWFhNGIzYzI5MiIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwibmFtZSI6IkZhcmVlZCBNaXJ6YSIsInByZWZlcnJlZF91c2VybmFtZSI6ImZhcmVlZCIsImdpdmVuX25hbWUiOiJGYXJlZWQiLCJmYW1pbHlfbmFtZSI6Ik1pcnphIiwiZW1haWwiOiJmYXJlZWQubWlyemFAY3Npcm8uYXUifQ.oqLZTiS5fJGm0Gf1DMJGA5r0hUxvOPV3KuDZbp7ksg2PLYKeFCC2mNndUOubcR-m_SphQrzN0ZXm7WxnQ4Krv3EEW1iB1NUJwQL8ZIeESCNZmX-mAACLilWW99m1k9SJovki-eACn_q-YiQehUA0YR7JMSEQ-3X7tp6VipHBSYqHOqcMTWeZgeH35sfXwINYqU3pJbtDRpBZBPBLaE6mlUD_IarJnPMKx9ImKqHxNmPEImrP2zI2z2I_PSe4rHay0_UXybiBDb46tv3kmK7ox1wsh6hdP7XRK_y8gyFaSUtvrJeN9xzukz1igDnbyN29MWAmuHDfyosBhE2seTOO0Q&#39; myUrl = &#39;https://data-api.testing.rrap-is.com/check-access/check-general-access&#39; head = {&#39;Authorization&#39;: &#39;Bearer {}&#39;.format(myToken)} response = requests.get(myUrl, headers=head) display(response.json()) . 401 . 200 . {&#39;username&#39;: &#39;fareed&#39;, &#39;email&#39;: &#39;fareed.mirza@csiro.au&#39;, &#39;roles&#39;: [&#39;default-roles-rrap&#39;, &#39;data-store-write&#39;, &#39;offline_access&#39;, &#39;handle-write&#39;, &#39;data-store-admin&#39;, &#39;data-store-read&#39;, &#39;handle-read&#39;, &#39;uma_authorization&#39;, &#39;handle-admin&#39;], &#39;access_token&#39;: &#39;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzMVBQVkZZdE53a2JEcVZnNjFqX08xNXdiN2FRZU1BaExCbWdpY2VvY2dBIn0.eyJleHAiOjE2NTgyODY3OTgsImlhdCI6MTY1ODI3OTU5OCwiYXV0aF90aW1lIjoxNjU4Mjc5NTk2LCJqdGkiOiI2YjI2YmVjOC1iYWRiLTQyMjgtYmFjNi1lYmYxMjYxZDk0NmYiLCJpc3MiOiJodHRwczovL2F1dGguZGV2LnJyYXAtaXMuY29tL2F1dGgvcmVhbG1zL3JyYXAiLCJhdWQiOlsicmVhbG0tbWFuYWdlbWVudCIsImFjY291bnQiXSwic3ViIjoiZWFiZDg2YjAtNWM1NC00NzNiLWI1MWUtMzZiZTMxMzdkNGRiIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZGF0YS1zdG9yZS11aSIsIm5vbmNlIjoiOTZmMjcyMzYtN2M3OC00NTlmLThhNGQtZmRjMmJhZGVlN2QwIiwic2Vzc2lvbl9zdGF0ZSI6ImU4YmQxYmZjLTliMGQtNDFkMy1hNDIxLWFiZWFhNGIzYzI5MiIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1ycmFwIiwiZGF0YS1zdG9yZS13cml0ZSIsIm9mZmxpbmVfYWNjZXNzIiwiaGFuZGxlLXdyaXRlIiwiZGF0YS1zdG9yZS1hZG1pbiIsImRhdGEtc3RvcmUtcmVhZCIsImhhbmRsZS1yZWFkIiwidW1hX2F1dGhvcml6YXRpb24iLCJoYW5kbGUtYWRtaW4iXX0sInJlc291cmNlX2FjY2VzcyI6eyJyZWFsbS1tYW5hZ2VtZW50Ijp7InJvbGVzIjpbInZpZXctcmVhbG0iLCJ2aWV3LWlkZW50aXR5LXByb3ZpZGVycyIsIm1hbmFnZS1pZGVudGl0eS1wcm92aWRlcnMiLCJpbXBlcnNvbmF0aW9uIiwicmVhbG0tYWRtaW4iLCJjcmVhdGUtY2xpZW50IiwibWFuYWdlLXVzZXJzIiwicXVlcnktcmVhbG1zIiwidmlldy1hdXRob3JpemF0aW9uIiwicXVlcnktY2xpZW50cyIsInF1ZXJ5LXVzZXJzIiwibWFuYWdlLWV2ZW50cyIsIm1hbmFnZS1yZWFsbSIsInZpZXctZXZlbnRzIiwidmlldy11c2VycyIsInZpZXctY2xpZW50cyIsIm1hbmFnZS1hdXRob3JpemF0aW9uIiwibWFuYWdlLWNsaWVudHMiLCJxdWVyeS1ncm91cHMiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsImRlbGV0ZS1hY2NvdW50Iiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJvcGVuaWQgZW1haWwgcHJvZmlsZSByb2xlcyIsInNpZCI6ImU4YmQxYmZjLTliMGQtNDFkMy1hNDIxLWFiZWFhNGIzYzI5MiIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwibmFtZSI6IkZhcmVlZCBNaXJ6YSIsInByZWZlcnJlZF91c2VybmFtZSI6ImZhcmVlZCIsImdpdmVuX25hbWUiOiJGYXJlZWQiLCJmYW1pbHlfbmFtZSI6Ik1pcnphIiwiZW1haWwiOiJmYXJlZWQubWlyemFAY3Npcm8uYXUifQ.oqLZTiS5fJGm0Gf1DMJGA5r0hUxvOPV3KuDZbp7ksg2PLYKeFCC2mNndUOubcR-m_SphQrzN0ZXm7WxnQ4Krv3EEW1iB1NUJwQL8ZIeESCNZmX-mAACLilWW99m1k9SJovki-eACn_q-YiQehUA0YR7JMSEQ-3X7tp6VipHBSYqHOqcMTWeZgeH35sfXwINYqU3pJbtDRpBZBPBLaE6mlUD_IarJnPMKx9ImKqHxNmPEImrP2zI2z2I_PSe4rHay0_UXybiBDb46tv3kmK7ox1wsh6hdP7XRK_y8gyFaSUtvrJeN9xzukz1igDnbyN29MWAmuHDfyosBhE2seTOO0Q&#39;} . Demos . Use cases . Simple result lineage | Traceability | Reproducibility | Find all inputs used for a particular Reef Intervnetion | Find all outputs generated by a particular &#39;Actor&#39; | def build_query(): #todo: Build url query for provenance api endpoint . Demo 1 . example_url_query_string = build_query() . Demo 2 . Demo 3 . Demo 4 . Demo 5 . &lt;/div&gt; .",
            "url": "https://gbrrestoration.github.io/rrap-demo-blog/jupyter/2022/07/19/provenance-query.html",
            "relUrl": "/jupyter/2022/07/19/provenance-query.html",
            "date": " • Jul 19, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://gbrrestoration.github.io/rrap-demo-blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://gbrrestoration.github.io/rrap-demo-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "RRAP M&amp;DS Information System . The Reef Restoration and Adaptation Program (RRAP) is a collaboration of Australia’s leading experts to create a suite of innovative and targeted measures to help preserve and restore the Great Barrier Reef. These interventions must have strong potential for positive impact, be socially and culturally acceptable, ecologically-sound, ethical and financially responsible. They would be implemented if, when and where it is decided action is needed – and only after rigorous assessment and testing. Learn more about the Reef Restoration and Adaptation Program here . This website is powered by fastpages! .",
          "url": "https://gbrrestoration.github.io/rrap-demo-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://gbrrestoration.github.io/rrap-demo-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}